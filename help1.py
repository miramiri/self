from telethon import events

# 📖 توضیحات دستورات
COMMANDS_HELP = {
    # امنیت
    "خروج همه": "🔐 همه کلاینت‌ها رو از اکانت خارج می‌کنه.",
    # گروه
    "سکوت": "🔇 گروه رو در حالت سکوت می‌ذاره.",
    "حذف سکوت": "🔊 سکوت گروه رو برمی‌داره.",
    "تنظیم خوشامد": "👋 پیام خوشامدگویی سفارشی تنظیم می‌کنه.",
    "خوشامدگویی": "👋 پیام خوشامدگویی فعلی رو نشون می‌ده.",
    # بازی‌ها
    "حدس عدد": "🎲 یه عدد تصادفی انتخاب می‌شه و باید حدس بزنی.",
    "سنگ کاغذ قیچی": "✊✋✌️ بازی کلاسیک سنگ کاغذ قیچی.",
    "تاس": "🎲 انداختن تاس معمولی.",
    "تاس [n]": "🎲 تاس می‌ندازه تا زمانی که عدد n بیاد (۱ تا ۶).",
    "شانس": "🍀 درصد شانس امروزت رو نشون می‌ده.",
    "معما": "🧠 یه معمای ساده می‌ده.",
    "معمای سخت": "🧩 یه معمای سخت‌تر می‌ده.",
    # سرگرمی
    "میم": "😂 یه میم خنده‌دار می‌ده.",
    "واقعیت": "📘 یه حقیقت جالب می‌گه.",
    "انگیزه": "🔥 متن انگیزشی می‌فرسته.",
    "دیالوگ": "🎬 دیالوگ فیلمی می‌ده.",
    "بزن": "👊 یه مشت نمادین به کاربر ریپلای می‌زنه.",
    "بغل": "🤗 یه بغل نمادین به کاربر ریپلای می‌ده.",
    "بپرس": "❓ جواب بله یا نه به سوالت می‌ده.",
    "اسم": "📝 یه اسم مستعار رندوم می‌ده.",
    "جوک": "🤣 یه جوک رندوم می‌ده.",
    # سرگرمی پلاس
    "سرگرمی فان": "🎉 فان سطح بالاتر می‌ده.",
    "تست شخصیت": "🧠 یه تست شخصیت ساده می‌ده.",
    # فروش
    "ثبت فروش": "🛒 گروه فعلی رو برای فروش ثبت می‌کنه.",
    "متن تبلیغ": "✏️ متن تبلیغ رو تنظیم می‌کنه.",
    "قیمت": "💰 قیمت رو مشخص می‌کنه.",
    "تخفیف": "🔻 میزان تخفیف رو مشخص می‌کنه.",
    "شروع فروش": "▶️ تبلیغ خودکار رو شروع می‌کنه.",
    "توقف فروش": "⏹️ تبلیغ خودکار رو متوقف می‌کنه.",
}

# 📂 گروه‌بندی برای توضیح بخش‌ها
SECTIONS = {
    "امنیت": ["خروج همه"],
    "مدیریت گروه": ["سکوت", "حذف سکوت", "تنظیم خوشامد", "خوشامدگویی"],
    "بازی‌ها": ["حدس عدد", "سنگ کاغذ قیچی", "تاس", "تاس [n]", "شانس", "معما", "معمای سخت"],
    "سرگرمی": ["میم", "واقعیت", "انگیزه", "دیالوگ", "بزن", "بغل", "بپرس", "اسم", "جوک"],
    "سرگرمی پلاس": ["سرگرمی فان", "تست شخصیت"],
    "فروش": ["ثبت فروش", "متن تبلیغ", "قیمت", "تخفیف", "شروع فروش", "توقف فروش"]
}

def register_help1(client, state, GLOBAL_GROUPS, save_state, send_status):
    def is_owner(e):
        return e.sender_id == state["owner_id"]

    @client.on(events.NewMessage(pattern=r"\.توضیح (.+)$"))
    async def help_cmd(event):
        if not is_owner(event): return
        query = event.pattern_match.group(1).strip()

        # اگه بخش باشه
        if query in SECTIONS:
            cmds = SECTIONS[query]
            text = f"📖 توضیحات [{query}] :\n"
            for c in cmds:
                desc = COMMANDS_HELP.get(c, "—")
                text += f"\n• {c} → {desc}"
            await event.edit(text)
            return

        # اگه دستور باشه
        desc = COMMANDS_HELP.get(query, "❌ همچین دستوری وجود نداره یا توضیحش ثبت نشده.")
        await event.edit(f"📖 توضیح [{query}] :\n{desc}")

